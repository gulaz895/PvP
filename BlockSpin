-- Blox V3 RSE + Magic Bullet + Hook + WindUI
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local lastFire, FIRE_DELAY = 0, 0.05

-- Default Config
local UIConfig = {
    AimEnabled = true,
    ESPEnabled = true,
    lineRedEnabled = true,
    fov = 500,
    maxRange = 500
}

-- Drawing
local espData, lineRedData, fovCircle = {}, {}, nil
if typeof(Drawing)=="table" and typeof(Drawing.new)=="function" then
    fovCircle = Drawing.new("Circle")
    fovCircle.Thickness, fovCircle.NumSides, fovCircle.Filled = 2, 64, false
    fovCircle.Color = Color3.fromRGB(255,255,0)
    fovCircle.Radius = UIConfig.fov
    fovCircle.Visible = false
end

-- Weapon/Remote Detection
local function detectWeapon(player)
    if player and player.Character then
        for _,v in ipairs(player.Character:GetChildren()) do
            if v:IsA("Tool") then return v end
        end
    end
end

local function getWeaponRemote(weapon)
    if weapon then
        for _,v in ipairs(weapon:GetChildren()) do
            if v:IsA("RemoteEvent") then return v end
        end
    end
end

-- FOV check
local function isHeadInFOV(headPos)
    local pos = Camera:WorldToViewportPoint(headPos)
    if pos.Z <= 0 then return false end
    local center = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    return (Vector2.new(pos.X,pos.Y)-center).Magnitude <= UIConfig.fov
end

-- Magic Bullet Variables
local firstShotFired = false
local cachedWeapon, cachedRemote
local bulletData

-- Hook RemoteEvent
local function hookRemote(remote)
    if remote then
        local oldFire = remote.FireServer
        remote.FireServer = newcclosure(function(self, ...)
            local args = {...}
            if args[2] == "shoot_gun" and firstShotFired and bulletData then
                args[4] = bulletData
            end
            return oldFire(self, unpack(args))
        end)
    end
end

-- Fire at head
local function fireAtHead(target)
    if not target or not target.Character then return end
    local head = target.Character:FindFirstChild("Head")
    if not head or not isHeadInFOV(head.Position) then return end

    local weapon = detectWeapon(LocalPlayer)
    local remote = getWeaponRemote(weapon)
    if not weapon or not remote then return end
    hookRemote(remote)

    if not firstShotFired then
        bulletData = {{ {Instance=head, Normal=Vector3.new(0,1,0), Position=head.Position} }}
        pcall(function() remote:FireServer(weapon,"shoot_gun",weapon.Handle.CFrame, bulletData) end)
        firstShotFired = true
        cachedWeapon = weapon
        cachedRemote = remote
        lastFire = tick()
        return
    end

    if tick()-lastFire < FIRE_DELAY then return end
    if cachedWeapon and cachedRemote then
        pcall(function() cachedRemote:FireServer(cachedWeapon,"shoot_gun",cachedWeapon.Handle.CFrame, bulletData) end)
        lastFire = tick()
    end
end

-- Get closest target in FOV
local function getClosestInFOV(radius)
    local center = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    local best, bestDist = nil, radius
    for _,plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Head") then
            local pos,onScreen = Camera:WorldToViewportPoint(plr.Character.Head.Position)
            if onScreen and pos.Z > 0 then
                local d = (Vector2.new(pos.X,pos.Y)-center).Magnitude
                if d < bestDist then best,bestDist = plr,d end
            end
        end
    end
    return best
end

-- Main loop
RunService.RenderStepped:Connect(function()
    local center = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    if fovCircle then fovCircle.Position=center; fovCircle.Visible=UIConfig.AimEnabled; fovCircle.Radius=UIConfig.fov end

    local target = UIConfig.AimEnabled and getClosestInFOV(UIConfig.fov)
    if target and (target.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= UIConfig.maxRange then
        fireAtHead(target)
    end

    -- ESP + Red Line
    for _,plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Head") and plr.Character:FindFirstChild("HumanoidRootPart") then
            local root, head = plr.Character.HumanoidRootPart, plr.Character.Head
            local posRoot,onRoot = Camera:WorldToViewportPoint(root.Position)
            local posHead,onHead = Camera:WorldToViewportPoint(head.Position)

            if onRoot and onHead then
                if not espData[plr] then
                    espData[plr] = {box={}, text=Drawing.new("Text")}
                    for i=1,4 do espData[plr].box[i] = Drawing.new("Line"); espData[plr].box[i].Thickness=2 end
                    espData[plr].text.Size=14; espData[plr].text.Center=true; espData[plr].text.Outline=true
                end
                local height = math.abs(posHead.Y-posRoot.Y)
                local width = math.clamp(height*0.6,20,400)
                local top,bottom = Vector2.new(posHead.X,posHead.Y), Vector2.new(posRoot.X,posRoot.Y)
                local box = espData[plr].box
                box[1].From,box[1].To = Vector2.new(top.X-width/2,top.Y), Vector2.new(top.X+width/2,top.Y)
                box[2].From,box[2].To = Vector2.new(top.X+width/2,top.Y), Vector2.new(bottom.X+width/2,bottom.Y)
                box[3].From,box[3].To = Vector2.new(bottom.X+width/2,bottom.Y), Vector2.new(bottom.X-width/2,bottom.Y)
                box[4].From,box[4].To = Vector2.new(bottom.X-width/2,bottom.Y), Vector2.new(top.X-width/2,top.Y)
                for i=1,4 do box[i].Visible=UIConfig.ESPEnabled; box[i].Color=Color3.new(1,0,0) end

                local dist = (LocalPlayer.Character.HumanoidRootPart.Position - root.Position).Magnitude
                espData[plr].text.Text = string.format("%s | %dm", plr.Name, math.floor(dist))
                espData[plr].text.Position = Vector2.new(posHead.X,posHead.Y-15)
                espData[plr].text.Visible=UIConfig.ESPEnabled

                if UIConfig.lineRedEnabled then
                    if not lineRedData[plr] then
                        lineRedData[plr] = Drawing.new("Line")
                        lineRedData[plr].Thickness = 2
                        lineRedData[plr].Color = Color3.new(1,0,0)
                    end
                    lineRedData[plr].From = Vector2.new(center.X, center.Y)
                    lineRedData[plr].To = Vector2.new(posHead.X,posHead.Y)
                    lineRedData[plr].Visible = UIConfig.ESPEnabled
                end
            elseif espData[plr] then
                for i=1,4 do espData[plr].box[i].Visible=false end
                espData[plr].text.Visible=false
                if lineRedData[plr] then lineRedData[plr].Visible=false end
            end
        end
    end
end)

-- WindUI Setup
local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/username/WindUI/main/init.lua"))()
local Window = WindUI:CreateWindow("Blox V3 RSE")

local AimTab = Window:CreateTab("Aim")
AimTab:CreateToggle("Aim Enabled", UIConfig.AimEnabled, function(val) UIConfig.AimEnabled = val end)
AimTab:CreateSlider("FOV", 100, 1000, UIConfig.fov, function(val) UIConfig.fov = val; if fovCircle then fovCircle.Radius=val end end)
AimTab:CreateSlider("Max Range", 50, 1000, UIConfig.maxRange, function(val) UIConfig.maxRange = val end)

local ESPTab = Window:CreateTab("ESP")
ESPTab:CreateToggle("ESP Enabled", UIConfig.ESPEnabled, function(val) UIConfig.ESPEnabled = val end)
ESPTab:CreateToggle("Red Line", UIConfig.lineRedEnabled, function(val) UIConfig.lineRedEnabled = val end)
